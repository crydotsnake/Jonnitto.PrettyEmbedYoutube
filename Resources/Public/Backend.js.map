{"version":3,"sources":["Resources/Private/Assets/Preview.js","Resources/Private/Assets/Backend.js","node_modules/gator/gator.js"],"names":["fixPreview","img","src","getAttribute","naturalHeight","naturalWidth","indexOf","replace","setAttribute","setTimeout","onload","fixPreviews","images","test","navigator","userAgent","document","querySelectorAll","i","length","NeosEvent","events","callback","forEach","event","addEventListener","backendFixPreview","nodeType","detail","element","attributes","error","node","get","_matcher","_level","_id","_handlers","_gatorInstances","_matchesSelector","selector","boundElement","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","Gator","matchesSelector","_getMatcher","call","parentNode","_addHandler","gator","id","push","_removeHandler","splice","type","hasOwnProperty","_bind","remove","this","Array","addEvent","_getGlobalCallback","e","match","target","srcElement","j","matchesEvent","stopPropagation","cancelBubble","cancel","_handleEvent","key","prototype","on","off","preventDefault","useCapture","module","exports","window"],"mappings":"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","file":"Backend.js","sourcesContent":["import Gator from \"gator\";\n\nfunction fixPreview(img) {\n    let src = img.getAttribute(\"src\");\n    if (\n        img.naturalHeight <= 90 &&\n        img.naturalWidth <= 120 &&\n        src.indexOf(\"/default.jpg\") == -1\n    ) {\n        src = src\n            .replace(\"mqdefault\", \"default\")\n            .replace(\"hqdefault\", \"mqdefault\")\n            .replace(\"sddefault\", \"hqdefault\")\n            .replace(\"maxresdefault\", \"sddefault\");\n        img.setAttribute(\"src\", src);\n        setTimeout(() => {\n            img.onload = () => {\n                fixPreview(img);\n            };\n        }, 10);\n        setTimeout(() => {\n            fixPreview(img);\n        }, 5000);\n    }\n}\n\nfunction fixPreviews(images) {\n    // We are on not on a mobile device without autoplay\n    if (\n        !/Android|webOS|iPhone|iPad|iPod|BlackBerry/i.test(navigator.userAgent)\n    ) {\n        if (typeof images === \"undefined\") {\n            images = document.querySelectorAll(\n                \"img.jonnitto-prettyembedyoutube__youtube-preview\"\n            );\n        }\n        for (let i = images.length - 1; i >= 0; i--) {\n            fixPreview(images[i]);\n        }\n    }\n}\n\nGator(window).on(\"load\", () => {\n    fixPreviews();\n});\n\nexport default fixPreviews;\n","import fixPreviews from \"./Preview\";\n\nfunction NeosEvent(events, callback) {\n    events.forEach(event => {\n        document.addEventListener(\"Neos.\" + event, callback, false);\n    });\n}\n\nfunction backendFixPreview(\n    event,\n    nodeType = \"Jonnitto.PrettyEmbedYoutube:YouTube\"\n) {\n    try {\n        // Old UI\n        if (\n            event.detail.element.attributes[\"data-node-_node-type\"][\"value\"] ==\n            nodeType\n        ) {\n            fixPreviews();\n        }\n    } catch (error) {}\n\n    try {\n        // New UI\n        const node = event.detail.node;\n        if (node.get(\"nodeType\") === nodeType) {\n            fixPreviews();\n        }\n    } catch (error) {}\n}\n\nNeosEvent([\"NodeCreated\", \"NodeSelected\"], backendFixPreview);\nNeosEvent([\"PageLoaded\", \"ContentModuleLoaded\"], () => {\n    fixPreviews();\n});\n\nexport default backendFixPreview;\n","/**\n * Copyright 2014 Craig Campbell\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * GATOR.JS\n * Simple Event Delegation\n *\n * @version 1.2.4\n *\n * Compatible with IE 9+, FF 3.6+, Safari 5+, Chrome\n *\n * Include legacy.js for compatibility with older browsers\n *\n *             .-._   _ _ _ _ _ _ _ _\n *  .-''-.__.-'00  '-' ' ' ' ' ' ' ' '-.\n * '.___ '    .   .--_'-' '-' '-' _'-' '._\n *  V: V 'vv-'   '_   '.       .'  _..' '.'.\n *    '=.____.=_.--'   :_.__.__:_   '.   : :\n *            (((____.-'        '-.  /   : :\n *                              (((-'\\ .' /\n *                            _____..'  .'\n *                           '-._____.-'\n */\n(function() {\n    var _matcher,\n        _level = 0,\n        _id = 0,\n        _handlers = {},\n        _gatorInstances = {};\n\n    function _addEvent(gator, type, callback) {\n\n        // blur and focus do not bubble up but if you use event capturing\n        // then you will get them\n        var useCapture = type == 'blur' || type == 'focus';\n        gator.element.addEventListener(type, callback, useCapture);\n    }\n\n    function _cancel(e) {\n        e.preventDefault();\n        e.stopPropagation();\n    }\n\n    /**\n     * returns function to use for determining if an element\n     * matches a query selector\n     *\n     * @returns {Function}\n     */\n    function _getMatcher(element) {\n        if (_matcher) {\n            return _matcher;\n        }\n\n        if (element.matches) {\n            _matcher = element.matches;\n            return _matcher;\n        }\n\n        if (element.webkitMatchesSelector) {\n            _matcher = element.webkitMatchesSelector;\n            return _matcher;\n        }\n\n        if (element.mozMatchesSelector) {\n            _matcher = element.mozMatchesSelector;\n            return _matcher;\n        }\n\n        if (element.msMatchesSelector) {\n            _matcher = element.msMatchesSelector;\n            return _matcher;\n        }\n\n        if (element.oMatchesSelector) {\n            _matcher = element.oMatchesSelector;\n            return _matcher;\n        }\n\n        // if it doesn't match a native browser method\n        // fall back to the gator function\n        _matcher = Gator.matchesSelector;\n        return _matcher;\n    }\n\n    /**\n     * determines if the specified element matches a given selector\n     *\n     * @param {Node} element - the element to compare against the selector\n     * @param {string} selector\n     * @param {Node} boundElement - the element the listener was attached to\n     * @returns {void|Node}\n     */\n    function _matchesSelector(element, selector, boundElement) {\n\n        // no selector means this event was bound directly to this element\n        if (selector == '_root') {\n            return boundElement;\n        }\n\n        // if we have moved up to the element you bound the event to\n        // then we have come too far\n        if (element === boundElement) {\n            return;\n        }\n\n        // if this is a match then we are done!\n        if (_getMatcher(element).call(element, selector)) {\n            return element;\n        }\n\n        // if this element did not match but has a parent we should try\n        // going up the tree to see if any of the parent elements match\n        // for example if you are looking for a click on an <a> tag but there\n        // is a <span> inside of the a tag that it is the target,\n        // it should still work\n        if (element.parentNode) {\n            _level++;\n            return _matchesSelector(element.parentNode, selector, boundElement);\n        }\n    }\n\n    function _addHandler(gator, event, selector, callback) {\n        if (!_handlers[gator.id]) {\n            _handlers[gator.id] = {};\n        }\n\n        if (!_handlers[gator.id][event]) {\n            _handlers[gator.id][event] = {};\n        }\n\n        if (!_handlers[gator.id][event][selector]) {\n            _handlers[gator.id][event][selector] = [];\n        }\n\n        _handlers[gator.id][event][selector].push(callback);\n    }\n\n    function _removeHandler(gator, event, selector, callback) {\n\n        // if there are no events tied to this element at all\n        // then don't do anything\n        if (!_handlers[gator.id]) {\n            return;\n        }\n\n        // if there is no event type specified then remove all events\n        // example: Gator(element).off()\n        if (!event) {\n            for (var type in _handlers[gator.id]) {\n                if (_handlers[gator.id].hasOwnProperty(type)) {\n                    _handlers[gator.id][type] = {};\n                }\n            }\n            return;\n        }\n\n        // if no callback or selector is specified remove all events of this type\n        // example: Gator(element).off('click')\n        if (!callback && !selector) {\n            _handlers[gator.id][event] = {};\n            return;\n        }\n\n        // if a selector is specified but no callback remove all events\n        // for this selector\n        // example: Gator(element).off('click', '.sub-element')\n        if (!callback) {\n            delete _handlers[gator.id][event][selector];\n            return;\n        }\n\n        // if we have specified an event type, selector, and callback then we\n        // need to make sure there are callbacks tied to this selector to\n        // begin with.  if there aren't then we can stop here\n        if (!_handlers[gator.id][event][selector]) {\n            return;\n        }\n\n        // if there are then loop through all the callbacks and if we find\n        // one that matches remove it from the array\n        for (var i = 0; i < _handlers[gator.id][event][selector].length; i++) {\n            if (_handlers[gator.id][event][selector][i] === callback) {\n                _handlers[gator.id][event][selector].splice(i, 1);\n                break;\n            }\n        }\n    }\n\n    function _handleEvent(id, e, type) {\n        if (!_handlers[id][type]) {\n            return;\n        }\n\n        var target = e.target || e.srcElement,\n            selector,\n            match,\n            matches = {},\n            i = 0,\n            j = 0;\n\n        // find all events that match\n        _level = 0;\n        for (selector in _handlers[id][type]) {\n            if (_handlers[id][type].hasOwnProperty(selector)) {\n                match = _matchesSelector(target, selector, _gatorInstances[id].element);\n\n                if (match && Gator.matchesEvent(type, _gatorInstances[id].element, match, selector == '_root', e)) {\n                    _level++;\n                    _handlers[id][type][selector].match = match;\n                    matches[_level] = _handlers[id][type][selector];\n                }\n            }\n        }\n\n        // stopPropagation() fails to set cancelBubble to true in Webkit\n        // @see http://code.google.com/p/chromium/issues/detail?id=162270\n        e.stopPropagation = function() {\n            e.cancelBubble = true;\n        };\n\n        for (i = 0; i <= _level; i++) {\n            if (matches[i]) {\n                for (j = 0; j < matches[i].length; j++) {\n                    if (matches[i][j].call(matches[i].match, e) === false) {\n                        Gator.cancel(e);\n                        return;\n                    }\n\n                    if (e.cancelBubble) {\n                        return;\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * binds the specified events to the element\n     *\n     * @param {string|Array} events\n     * @param {string} selector\n     * @param {Function} callback\n     * @param {boolean=} remove\n     * @returns {Object}\n     */\n    function _bind(events, selector, callback, remove) {\n\n        // fail silently if you pass null or undefined as an alement\n        // in the Gator constructor\n        if (!this.element) {\n            return;\n        }\n\n        if (!(events instanceof Array)) {\n            events = [events];\n        }\n\n        if (!callback && typeof(selector) == 'function') {\n            callback = selector;\n            selector = '_root';\n        }\n\n        var id = this.id,\n            i;\n\n        function _getGlobalCallback(type) {\n            return function(e) {\n                _handleEvent(id, e, type);\n            };\n        }\n\n        for (i = 0; i < events.length; i++) {\n            if (remove) {\n                _removeHandler(this, events[i], selector, callback);\n                continue;\n            }\n\n            if (!_handlers[id] || !_handlers[id][events[i]]) {\n                Gator.addEvent(this, events[i], _getGlobalCallback(events[i]));\n            }\n\n            _addHandler(this, events[i], selector, callback);\n        }\n\n        return this;\n    }\n\n    /**\n     * Gator object constructor\n     *\n     * @param {Node} element\n     */\n    function Gator(element, id) {\n\n        // called as function\n        if (!(this instanceof Gator)) {\n            // only keep one Gator instance per node to make sure that\n            // we don't create a ton of new objects if you want to delegate\n            // multiple events from the same node\n            //\n            // for example: Gator(document).on(...\n            for (var key in _gatorInstances) {\n                if (_gatorInstances[key].element === element) {\n                    return _gatorInstances[key];\n                }\n            }\n\n            _id++;\n            _gatorInstances[_id] = new Gator(element, _id);\n\n            return _gatorInstances[_id];\n        }\n\n        this.element = element;\n        this.id = id;\n    }\n\n    /**\n     * adds an event\n     *\n     * @param {string|Array} events\n     * @param {string} selector\n     * @param {Function} callback\n     * @returns {Object}\n     */\n    Gator.prototype.on = function(events, selector, callback) {\n        return _bind.call(this, events, selector, callback);\n    };\n\n    /**\n     * removes an event\n     *\n     * @param {string|Array} events\n     * @param {string} selector\n     * @param {Function} callback\n     * @returns {Object}\n     */\n    Gator.prototype.off = function(events, selector, callback) {\n        return _bind.call(this, events, selector, callback, true);\n    };\n\n    Gator.matchesSelector = function() {};\n    Gator.cancel = _cancel;\n    Gator.addEvent = _addEvent;\n    Gator.matchesEvent = function() {\n        return true;\n    };\n\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports = Gator;\n    }\n\n    window.Gator = Gator;\n}) ();\n"]}