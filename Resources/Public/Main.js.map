{"version":3,"sources":["node_modules/gator/gator.js","Resources/Private/Assets/Embed.js","Resources/Private/Assets/Popup.js","Resources/Private/Assets/Preview.js"],"names":["_matcher","_level","_id","_handlers","_gatorInstances","_matchesSelector","element","selector","boundElement","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","Gator","matchesSelector","_getMatcher","call","parentNode","_addHandler","gator","event","callback","id","push","_removeHandler","i","length","splice","type","hasOwnProperty","_bind","events","remove","this","Array","addEvent","_getGlobalCallback","e","match","target","srcElement","j","matchesEvent","stopPropagation","cancelBubble","cancel","key","prototype","on","off","preventDefault","useCapture","addEventListener","module","exports","replaceTag","tagName","originalElement","originalTag","startRX","RegExp","endRX","startSubst","endSubst","wrapper","document","createElement","innerHTML","outerHTML","replace","newElement","firstChild","replaceChild","initVideo","link","embed","getAttribute","image","getElementsByTagName","imageSrc","width","height","fullscreen","setAttribute","classList","add","style","paddingTop","parseInt","window","prettyEmbedYoutubeRestore","img","removeAttribute","prettyEmbedYoutubeInit","links","test","navigator","userAgent","querySelectorAll","documentElement","HTML","BASE","VISIBLE_CLASS","MARKUP","$popup","popup","closeModal","body","src","naturalHeight","naturalWidth","indexOf","onload","className","appendChild","getElementById","keyCode","contains","prettyEmbedYoutubeFixPreview","imgs"],"mappings":"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","file":"Main.js","sourcesContent":["/**\n * Copyright 2014 Craig Campbell\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * GATOR.JS\n * Simple Event Delegation\n *\n * @version 1.2.4\n *\n * Compatible with IE 9+, FF 3.6+, Safari 5+, Chrome\n *\n * Include legacy.js for compatibility with older browsers\n *\n *             .-._   _ _ _ _ _ _ _ _\n *  .-''-.__.-'00  '-' ' ' ' ' ' ' ' '-.\n * '.___ '    .   .--_'-' '-' '-' _'-' '._\n *  V: V 'vv-'   '_   '.       .'  _..' '.'.\n *    '=.____.=_.--'   :_.__.__:_   '.   : :\n *            (((____.-'        '-.  /   : :\n *                              (((-'\\ .' /\n *                            _____..'  .'\n *                           '-._____.-'\n */\n(function() {\n    var _matcher,\n        _level = 0,\n        _id = 0,\n        _handlers = {},\n        _gatorInstances = {};\n\n    function _addEvent(gator, type, callback) {\n\n        // blur and focus do not bubble up but if you use event capturing\n        // then you will get them\n        var useCapture = type == 'blur' || type == 'focus';\n        gator.element.addEventListener(type, callback, useCapture);\n    }\n\n    function _cancel(e) {\n        e.preventDefault();\n        e.stopPropagation();\n    }\n\n    /**\n     * returns function to use for determining if an element\n     * matches a query selector\n     *\n     * @returns {Function}\n     */\n    function _getMatcher(element) {\n        if (_matcher) {\n            return _matcher;\n        }\n\n        if (element.matches) {\n            _matcher = element.matches;\n            return _matcher;\n        }\n\n        if (element.webkitMatchesSelector) {\n            _matcher = element.webkitMatchesSelector;\n            return _matcher;\n        }\n\n        if (element.mozMatchesSelector) {\n            _matcher = element.mozMatchesSelector;\n            return _matcher;\n        }\n\n        if (element.msMatchesSelector) {\n            _matcher = element.msMatchesSelector;\n            return _matcher;\n        }\n\n        if (element.oMatchesSelector) {\n            _matcher = element.oMatchesSelector;\n            return _matcher;\n        }\n\n        // if it doesn't match a native browser method\n        // fall back to the gator function\n        _matcher = Gator.matchesSelector;\n        return _matcher;\n    }\n\n    /**\n     * determines if the specified element matches a given selector\n     *\n     * @param {Node} element - the element to compare against the selector\n     * @param {string} selector\n     * @param {Node} boundElement - the element the listener was attached to\n     * @returns {void|Node}\n     */\n    function _matchesSelector(element, selector, boundElement) {\n\n        // no selector means this event was bound directly to this element\n        if (selector == '_root') {\n            return boundElement;\n        }\n\n        // if we have moved up to the element you bound the event to\n        // then we have come too far\n        if (element === boundElement) {\n            return;\n        }\n\n        // if this is a match then we are done!\n        if (_getMatcher(element).call(element, selector)) {\n            return element;\n        }\n\n        // if this element did not match but has a parent we should try\n        // going up the tree to see if any of the parent elements match\n        // for example if you are looking for a click on an <a> tag but there\n        // is a <span> inside of the a tag that it is the target,\n        // it should still work\n        if (element.parentNode) {\n            _level++;\n            return _matchesSelector(element.parentNode, selector, boundElement);\n        }\n    }\n\n    function _addHandler(gator, event, selector, callback) {\n        if (!_handlers[gator.id]) {\n            _handlers[gator.id] = {};\n        }\n\n        if (!_handlers[gator.id][event]) {\n            _handlers[gator.id][event] = {};\n        }\n\n        if (!_handlers[gator.id][event][selector]) {\n            _handlers[gator.id][event][selector] = [];\n        }\n\n        _handlers[gator.id][event][selector].push(callback);\n    }\n\n    function _removeHandler(gator, event, selector, callback) {\n\n        // if there are no events tied to this element at all\n        // then don't do anything\n        if (!_handlers[gator.id]) {\n            return;\n        }\n\n        // if there is no event type specified then remove all events\n        // example: Gator(element).off()\n        if (!event) {\n            for (var type in _handlers[gator.id]) {\n                if (_handlers[gator.id].hasOwnProperty(type)) {\n                    _handlers[gator.id][type] = {};\n                }\n            }\n            return;\n        }\n\n        // if no callback or selector is specified remove all events of this type\n        // example: Gator(element).off('click')\n        if (!callback && !selector) {\n            _handlers[gator.id][event] = {};\n            return;\n        }\n\n        // if a selector is specified but no callback remove all events\n        // for this selector\n        // example: Gator(element).off('click', '.sub-element')\n        if (!callback) {\n            delete _handlers[gator.id][event][selector];\n            return;\n        }\n\n        // if we have specified an event type, selector, and callback then we\n        // need to make sure there are callbacks tied to this selector to\n        // begin with.  if there aren't then we can stop here\n        if (!_handlers[gator.id][event][selector]) {\n            return;\n        }\n\n        // if there are then loop through all the callbacks and if we find\n        // one that matches remove it from the array\n        for (var i = 0; i < _handlers[gator.id][event][selector].length; i++) {\n            if (_handlers[gator.id][event][selector][i] === callback) {\n                _handlers[gator.id][event][selector].splice(i, 1);\n                break;\n            }\n        }\n    }\n\n    function _handleEvent(id, e, type) {\n        if (!_handlers[id][type]) {\n            return;\n        }\n\n        var target = e.target || e.srcElement,\n            selector,\n            match,\n            matches = {},\n            i = 0,\n            j = 0;\n\n        // find all events that match\n        _level = 0;\n        for (selector in _handlers[id][type]) {\n            if (_handlers[id][type].hasOwnProperty(selector)) {\n                match = _matchesSelector(target, selector, _gatorInstances[id].element);\n\n                if (match && Gator.matchesEvent(type, _gatorInstances[id].element, match, selector == '_root', e)) {\n                    _level++;\n                    _handlers[id][type][selector].match = match;\n                    matches[_level] = _handlers[id][type][selector];\n                }\n            }\n        }\n\n        // stopPropagation() fails to set cancelBubble to true in Webkit\n        // @see http://code.google.com/p/chromium/issues/detail?id=162270\n        e.stopPropagation = function() {\n            e.cancelBubble = true;\n        };\n\n        for (i = 0; i <= _level; i++) {\n            if (matches[i]) {\n                for (j = 0; j < matches[i].length; j++) {\n                    if (matches[i][j].call(matches[i].match, e) === false) {\n                        Gator.cancel(e);\n                        return;\n                    }\n\n                    if (e.cancelBubble) {\n                        return;\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * binds the specified events to the element\n     *\n     * @param {string|Array} events\n     * @param {string} selector\n     * @param {Function} callback\n     * @param {boolean=} remove\n     * @returns {Object}\n     */\n    function _bind(events, selector, callback, remove) {\n\n        // fail silently if you pass null or undefined as an alement\n        // in the Gator constructor\n        if (!this.element) {\n            return;\n        }\n\n        if (!(events instanceof Array)) {\n            events = [events];\n        }\n\n        if (!callback && typeof(selector) == 'function') {\n            callback = selector;\n            selector = '_root';\n        }\n\n        var id = this.id,\n            i;\n\n        function _getGlobalCallback(type) {\n            return function(e) {\n                _handleEvent(id, e, type);\n            };\n        }\n\n        for (i = 0; i < events.length; i++) {\n            if (remove) {\n                _removeHandler(this, events[i], selector, callback);\n                continue;\n            }\n\n            if (!_handlers[id] || !_handlers[id][events[i]]) {\n                Gator.addEvent(this, events[i], _getGlobalCallback(events[i]));\n            }\n\n            _addHandler(this, events[i], selector, callback);\n        }\n\n        return this;\n    }\n\n    /**\n     * Gator object constructor\n     *\n     * @param {Node} element\n     */\n    function Gator(element, id) {\n\n        // called as function\n        if (!(this instanceof Gator)) {\n            // only keep one Gator instance per node to make sure that\n            // we don't create a ton of new objects if you want to delegate\n            // multiple events from the same node\n            //\n            // for example: Gator(document).on(...\n            for (var key in _gatorInstances) {\n                if (_gatorInstances[key].element === element) {\n                    return _gatorInstances[key];\n                }\n            }\n\n            _id++;\n            _gatorInstances[_id] = new Gator(element, _id);\n\n            return _gatorInstances[_id];\n        }\n\n        this.element = element;\n        this.id = id;\n    }\n\n    /**\n     * adds an event\n     *\n     * @param {string|Array} events\n     * @param {string} selector\n     * @param {Function} callback\n     * @returns {Object}\n     */\n    Gator.prototype.on = function(events, selector, callback) {\n        return _bind.call(this, events, selector, callback);\n    };\n\n    /**\n     * removes an event\n     *\n     * @param {string|Array} events\n     * @param {string} selector\n     * @param {Function} callback\n     * @returns {Object}\n     */\n    Gator.prototype.off = function(events, selector, callback) {\n        return _bind.call(this, events, selector, callback, true);\n    };\n\n    Gator.matchesSelector = function() {};\n    Gator.cancel = _cancel;\n    Gator.addEvent = _addEvent;\n    Gator.matchesEvent = function() {\n        return true;\n    };\n\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports = Gator;\n    }\n\n    window.Gator = Gator;\n}) ();\n","import Gator from \"gator\";\n\nfunction replaceTag(element, tagName) {\n    if (typeof element === \"object\" && typeof tagName === \"string\") {\n        let originalElement = element;\n        let originalTag = originalElement.tagName;\n        let startRX = new RegExp(\"^<\" + originalTag, \"i\");\n        let endRX = new RegExp(originalTag + \">$\", \"i\");\n        let startSubst = \"<\" + tagName;\n        let endSubst = tagName + \">\";\n        let wrapper = document.createElement(\"div\");\n        wrapper.innerHTML = originalElement.outerHTML\n            .replace(startRX, startSubst)\n            .replace(endRX, endSubst);\n        let newElement = wrapper.firstChild;\n        element.parentNode.replaceChild(newElement, element);\n        return newElement;\n    }\n}\n\nfunction initVideo(link) {\n    let embed = link.getAttribute(\"data-embed\") || false;\n    let image = link.getElementsByTagName(\"img\")[0];\n    let imageSrc = image.getAttribute(\"src\") || false;\n    let width = image.width;\n    let height = image.height;\n    if (embed && width && height) {\n        let element = replaceTag(link, \"div\");\n        let fullscreen =\n            link.getAttribute(\"data-fs\") == \"true\" ? \"allowfullscreen \" : \"\";\n\n        element.setAttribute(\"data-img\", imageSrc);\n        element.classList.add(\"play\");\n        element.style.paddingTop =\n            parseInt(height) / parseInt(width) * 100 + \"%\";\n        element.innerHTML = `<iframe src=\"${embed}\" width=\"${width}\" height=\"${height}\" ${fullscreen}frameborder=\"0\"></iframe>`;\n    }\n}\n\nfunction openVideo(event) {\n    event.preventDefault();\n    initVideo(this);\n}\n\nwindow.prettyEmbedYoutubeRestore = function(element) {\n    let img = element.getAttribute(\"data-img\") || false;\n    if (img) {\n        element.classList.remove(\"play\");\n        element.removeAttribute(\"style\");\n        element.innerHTML = `<img src=\"${img}\" />`;\n        replaceTag(element, \"a\");\n    }\n};\n\nwindow.prettyEmbedYoutubeInit = function(links) {\n    // We are on a mobile device without autoplay\n    if (\n        /Android|webOS|iPhone|iPad|iPod|BlackBerry/i.test(navigator.userAgent)\n    ) {\n        if (typeof links === \"undefined\") {\n            links = document.querySelectorAll(\"a.embed-youtube\");\n        }\n        for (let i = links.length - 1; i >= 0; i--) {\n            initVideo(links[i]);\n        }\n    }\n};\n\nGator(window).on(\"load\", function() {\n    prettyEmbedYoutubeInit();\n});\n\n// Attach the events to the html tag (because of the Google Tag Manager)\nGator(document.documentElement).on(\"click\", \"a.embed-youtube\", openVideo);\n","import Gator from \"gator\";\n\nconst HTML = document.documentElement;\nconst BASE = \"jonnitto-prettyembed-popup\";\nconst VISIBLE_CLASS = `${BASE}-visible`;\nconst MARKUP = `\n<div class=\"${BASE}-holder\">\n    <iframe class=\"${BASE}-iframe\" src=\"%src%\" frameborder=\"0\"%fs%></iframe>\n</div>`;\n\nlet $popup = false;\nlet popup = document.createElement(\"div\");\npopup.className = BASE;\npopup.innerHTML = `\n<div class=\"${BASE}-inner\">\n    <button type=\"button\" class=\"${BASE}-close\">&times;</button>\n    <div id=\"popup-youtube\" class=\"${BASE}-content\"></div>\n</div>`;\n\nfunction closeModal() {\n    document.body.classList.remove(VISIBLE_CLASS);\n    setTimeout(function() {\n        $popup.innerHTML = \"\";\n    }, 300);\n}\n\nfunction openModal(event) {\n    let fullscreen =\n        this.getAttribute(\"data-fs\") == \"true\" ? \" allowfullscreen\" : \"\";\n    let embed = this.getAttribute(\"data-embed\") || false;\n\n    if (!$popup) {\n        document.body.appendChild(popup);\n        $popup = document.getElementById(\"popup-youtube\");\n    }\n\n    if (embed) {\n        event.preventDefault();\n        $popup.innerHTML = MARKUP.replace(\"%src%\", embed).replace(\n            \"%fs%\",\n            fullscreen\n        );\n        setTimeout(function() {\n            document.body.classList.add(VISIBLE_CLASS);\n        }, 100);\n    }\n}\n\nfunction closeOnESC(event) {\n    if (event.keyCode == 27) {\n        if (document.body.classList.contains(VISIBLE_CLASS) != -1) {\n            closeModal();\n        }\n    }\n}\n\n// Attach the events to the html tag (because of the Google Tag Manager)\nGator(HTML).on(\"click\", \"a.popup-youtube\", openModal);\nGator(HTML).on(\"click\", `.${BASE}`, closeModal);\n\n// Close on ESC\nGator(HTML).on(\"keyup\", closeOnESC);\n","import Gator from \"gator\";\n\nfunction fixPreview(img) {\n    let src = img.getAttribute(\"src\");\n    if (\n        img.naturalHeight <= 90 &&\n        img.naturalWidth <= 120 &&\n        src.indexOf(\"/default.jpg\") == -1\n    ) {\n        src = src\n            .replace(\"mqdefault\", \"default\")\n            .replace(\"hqdefault\", \"mqdefault\")\n            .replace(\"sddefault\", \"hqdefault\")\n            .replace(\"maxresdefault\", \"sddefault\");\n        img.setAttribute(\"src\", src);\n        setTimeout(function() {\n            img.onload = function() {\n                fixPreview(img);\n            };\n        }, 10);\n        setTimeout(function() {\n            fixPreview(img);\n        }, 5000);\n    }\n}\n\nwindow.prettyEmbedYoutubeFixPreview = function(imgs) {\n    // We are on not on a mobile device without autoplay\n    if (\n        !/Android|webOS|iPhone|iPad|iPod|BlackBerry/i.test(navigator.userAgent)\n    ) {\n        if (typeof imgs === \"undefined\") {\n            imgs = document.querySelectorAll(\n                \"img.embed-youtube-youtube-preview\"\n            );\n        }\n        for (let i = imgs.length - 1; i >= 0; i--) {\n            fixPreview(imgs[i]);\n        }\n    }\n};\n\nGator(window).on(\"load\", function() {\n    prettyEmbedYoutubeFixPreview();\n});\n"]}