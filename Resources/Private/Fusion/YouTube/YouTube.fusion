prototype(YT:YouTube) < prototype(Fusion:Tag) {
    configuration = ${Configuration.setting('Jonnitto.PrettyEmbedYoutube')}
    customPreviewImage = ${q(node).property('customPreviewImage')}
    type = ${q(node).property('type') ? q(node).property('type') : 'video'}
    lightbox = ${q(node).property('lightbox')}
    allowFullScreen = ${q(node).property('allowFullScreen')}
    showinfo = ${q(node).property('showinfo')}
    showControls = ${q(node).property('showControls')}
    loop = ${q(node).property('loop')}
    closedCaptions = ${q(node).property('closedCaptions')}
    showRelated = ${q(node).property('showRelated')}

    videoID = ${q(node).property('videoID')}
    videoID.@process.getIDFromUrl = YT:GetIDFromUrl

    @context {
        configuration = ${this.configuration}
        customPreviewImage = ${this.customPreviewImage}
        type = ${this.type}
        maximumWidth = ${this.maximumWidth ? this.maximumWidth : this.configuration.maximumWidth}
        videoID = ${this.videoID}
        lightbox = ${this.lightbox}
        allowFullScreen = ${this.allowFullScreen}
        showControls = ${this.showControls}
        loop = ${this.loop}
        closedCaptions = ${this.closedCaptions}
        showRelated = ${this.showRelated}
    }

    @process {
        hasNoVideoID = YT:Notification {
            key = 'noVideoID'
            @if.output = ${videoID ? false : true}
        }
        isPlaylistANDnoImage = YT:Notification {
            key = 'isPlaylistANDnoImage'
            @if.output = ${videoID && type == 'playlist' && !customPreviewImage ? true : false}
        }

        wrapper = Fusion:Tag {
            @if.render = ${configuration.wrapper}
            attributes.class = ${configuration.wrapper}
            content = ${value}
        }
    }

    tagName = ${node.context.live ? 'a' : 'div'}

    attributes {
        class = Fusion:RawArray {
            nodeType = 'jonnitto-prettyembedyoutube'
            lightbox = ${lightbox ? configuration.lightbox.class : configuration.embed.class}
        }
        data-fs = ${allowFullScreen ? 'true' : 'false'}
        data-embed = Fusion:Array {
            src            = ${configuration.embed[type]}
            videoID        = ${videoID}
            var            = ${type == 'video' ? '?' : '&'}
            autoplay       = 'autoplay=1'
            showinfo       = ${showInfo ? '' : '&showinfo=0'}
            showControls   = ${showControls ? '' : '&controls=0'}
            loop           = ${loop ? '&loop=1' : ''}
            closedCaptions = ${closedCaptions ? '&cc_load_policy=1' : ''}
            showRelated    = ${showRelated ? '&rel=1' : '&rel=0'}
        }
        href = ${configuration.lightbox[type] + videoID}
        target = '_blank'
    }

    content = Fusion:Case {
        hasCustomPreviewImage {
            condition = ${customPreviewImage ? true : false}
            renderer = Carbon.Image:Tag {
                attributes.class = 'embed-youtube-costum-preview'
                asset = ${customPreviewImage}
                maximumWidth = ${maximumWidth}
            }
        }
        default {
            condition = true
            renderer = Fusion:Tag {
                tagName = 'img'
                attributes {
                    class = 'embed-youtube-youtube-preview'
                    src = ${'//img.youtube.com/vi/' + videoID + '/' + configuration.imgResultion + '.jpg'}
                }
            }
        }
    }


    @process.contentElementWrapping {
        expression = Neos.Neos:ContentElementWrapping
        @position = 'end 999999999'
    }
    @exceptionHandler = 'Neos\\Neos\\Fusion\\ExceptionHandlers\\NodeWrappingHandler'
}
